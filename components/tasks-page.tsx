/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/LyD6rtGci5P
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Button } from "@/components/ui/button";
import CreateTaskForm from "./create-task-form";
import TaskCard from "./task-card";
import { ListIcon, MenuIcon, PlusIcon } from "lucide-react";
import Sidebar from "./sidebar";

const groups = [
  {
    id: "today",
    name: "Today",
    noTasksLabel: "No tasks for today",
    loadTasks: () => {
      return [
        {
          id: 1,
          description: "Finish weekly report",
          completed: false,
          dueDate: "2023-04-15",
        },
      ];
    },
  },
  {
    id: "tomorrow",
    name: "Tomorrow",
    noTasksLabel: "No tasks for tomorrow",
    loadTasks: () => {
      return [];
    },
  },
  {
    id: "this-week",
    name: "This week",
    noTasksLabel: "No tasks for this week",
    loadTasks: () => {
      return [];
    },
  },
  {
    id: "next-15-days",
    name: "Next 15 days",
    noTasksLabel: "No tasks for the next 15 days",
    loadTasks: () => {
      return [];
    },
  },
  {
    id: "upcoming",
    name: "Upcoming",
    noTasksLabel: "No upcoming tasks",
    loadTasks: () => {
      return [];
    },
  },
  {
    id: "unscheduled",
    name: "Unscheduled",
    noTasksLabel: "No unscheduled tasks",
    loadTasks: () => {
      return [];
    },
  },
];

export function TasksPage() {
  return (
    <div className="flex min-h-screen w-full bg-background">
      <Sidebar />
      <div className="flex flex-1 flex-col">
        <header className="sticky top-0 z-10 flex h-14 items-center justify-between border-b bg-card px-4 shadow-sm md:px-6">
          <div className="flex items-center gap-4">
            <Button variant="ghost" size="icon" className="md:hidden">
              <MenuIcon className="h-6 w-6" />
              <span className="sr-only">Toggle menu</span>
            </Button>
            <h1 className="text-lg font-semibold flex items-center gap-2">
              <div>
                <ListIcon className="h-5 w-5" />
              </div>
              <div>My Tasks</div>
            </h1>
          </div>
        </header>
        <main className="flex-1 overflow-auto p-4 md:p-6 bg-gradient-to-br from-blue-100 to-green-100">
          <div className="mb-4">
            <CreateTaskForm />
          </div>
          <div className="grid gap-4">
            {groups.map((group) => {
              const tasks = group.loadTasks();
              return (
                <div key={group.id}>
                  <h2 className="mb-2 text-lg font-semibold">{group.name}</h2>
                  {tasks.length === 0 ? (
                    <p className="text-sm text-muted-foreground">
                      {group.noTasksLabel}
                    </p>
                  ) : (
                    tasks.map((task) => <TaskCard key={task.id} />)
                  )}
                </div>
              );
            })}
          </div>
        </main>
      </div>
    </div>
  );
}
